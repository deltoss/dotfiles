{{ if eq .chezmoi.os "windows" -}}

# Self-elevate the script if required
if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {
  if ([int](Get-CimInstance -Class Win32_OperatingSystem | Select-Object -ExpandProperty BuildNumber) -ge 6000) {
    $CommandLine = "-NoExit -NoProfile -NoLogo -File `"" + $MyInvocation.MyCommand.Path + "`" " + $MyInvocation.UnboundArguments
    Start-Process -Wait -FilePath pwsh.exe -Verb Runas -ArgumentList $CommandLine
    Exit
  }
}

Write-Host "Configuring necessary environment variables..."
$env:CHEZMOI_SOURCEDIR = "{{.chezmoi.sourceDir}}"

{{ range .packages.windows.core}}
Write-Host "Installing {{ .id }}..."
{{- if hasKey . "precommand" }}
{{ .precommand }}
{{- end }}
winget install --id {{ .id | quote }} -e --no-upgrade
{{- if hasKey . "postcommand" }}
{{ .postcommand }}
{{- end }}
{{ end -}}

{{- if eq .computerPurpose "personal" -}}
  {{ range .packages.windows.personal}}
  Write-Host "Installing {{ .id }}..."
  {{- if hasKey . "precommand" }}
  {{ .precommand }}
  {{- end }}
  winget install --id {{ .id | quote }} -e --no-upgrade
  {{- if hasKey . "postcommand" }}
  {{ .postcommand }}
  {{- end }}
  {{ end -}}
{{- else if eq .computerPurpose "work" -}}
  {{ range .packages.windows.work}}
  Write-Host "Installing {{ .id }}..."
  {{- if hasKey . "precommand" }}
  {{ .precommand }}
  {{- end }}
  winget install --id {{ .id | quote }} -e --no-upgrade
  {{- if hasKey . "postcommand" }}
  {{ .postcommand }}
  {{- end }}
  {{ end -}}
{{- end -}}

Write-Host "Review the output, then type 'exit' + enter..."

{{ end -}}
